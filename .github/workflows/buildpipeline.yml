name: Build latest tag commit on push or custom tag
on:
  workflow_dispatch:
    inputs:
      tag:
        description: Build a specific tag (version) will use the latest commit of given tag
        required: false
        default: ""
        type: string
  push:
    tags:
      - v*

jobs:
  build:
    # trunk-ignore(actionlint/runner-label)
    runs-on: buildjet-4vcpu-ubuntu-2204-arm
    permissions:
      contents: read
      id-token: write
      attestations: write
    outputs:
      artifact-name: ${{ steps.fix-build-name.outputs.artifact-name }}
      version: ${{ steps.fix-build-name.outputs.version }}
      revision: ${{ steps.fix-build-name.outputs.revision }}
      run-id: ${{ steps.fix-build-name.outputs.run-id }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag || github.ref }}

      - name: Setup Environment
        uses: ./.github/actions/setup-environment
        with:
          environment: 'build'
          goversion: '1.21.9'
          pythonversion: '3.10.x'
          qtversion: '6.7.0'
          applypatches: 'true'
          usecaching: 'true'
          exportGHEnvVars: 'true'
          exportVCPKGEnvVars: 'true'

      - name: Run Build
        id: buildstep
        run: make build

      - name: Check bridge cli executable
        run: |
          echo "Running ./cmd/Desktop-Bridge/deploy/linux/bridge --help"
          ./cmd/Desktop-Bridge/deploy/linux/bridge --help
          if [ $? -ne 0 ]; then
            echo "Error: ./cmd/Desktop-Bridge/deploy/linux/bridge --help failed"
            exit 1
          fi

      - name: Fix Build Naming
        id: fix-build-name
        run: |
          TAG_VER="$(echo ${{ github.ref }} | sed 's/refs\/tags\///' )"
          if [ -z "$TAG_VER" ]; then
            TAG_VER="latest"
          fi

          COMMIT_SHA=$(git rev-parse --short HEAD)
          BUILD_NAME="bridge-linux-${TAG_VER}-${COMMIT_SHA}.aarch64.tar.gz"

          mv bridge*.tgz $BUILD_NAME
          echo "artifact-name=$BUILD_NAME" >> $GITHUB_OUTPUT
          echo "version=$TAG_VER" >> $GITHUB_OUTPUT
          echo "revision=$COMMIT_SHA" >> $GITHUB_OUTPUT
          echo "run-id=${{ github.run_id }}" >> $GITHUB_OUTPUT

      - name: attest build artifact
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: ${{ steps.fix-build-name.outputs.artifact-name }}

      - name: upload artifacts
        id: build-upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.fix-build-name.outputs.artifact-name }}
          path: ${{ steps.fix-build-name.outputs.artifact-name }}

  #test:
  #  needs: [build]
  #  uses: ArchitektApx/proton-bridge/.github/workflows/test.yml@master
  #  with:
  #    tag: ${{ github.event.inputs.tag || github.ref }}
  #    fail-fast: false
  #    attest-logs: true
  #    upload-logs: true

  package:
    needs: [build]
    uses: ArchitektApx/proton-bridge/.github/workflows/package.yml@master
    with:
      artifact-name: ${{ needs.build.outputs.artifact-name }}
      version: ${{ needs.build.outputs.version }}
      revision: ${{ needs.build.outputs.revision }}
      run-id: ${{ needs.build.outputs.run-id }}
  
  #release:
  #  needs: [package]
  #  uses: ArchitektApx/proton-bridge/.github/workflows/release.yml@master
  #  with:
  #    artifact-name: ${{ needs.package.outputs.artifact-name }}
  #    version: ${{ needs.package.outputs.version }}
  #    revision: ${{ needs.package.outputs.revision }}
  #    run-id: ${{ needs.package.outputs.run-id }}