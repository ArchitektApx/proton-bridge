name: Build&Test latest tag commit
on:
  workflow_dispatch:
    inputs:
      tag:
        description: Test a specific tag
        required: false
        default: ""
        type: string
  push:
    tags:
      - v*

jobs:
  tests:
    runs-on: buildjet-4vcpu-ubuntu-2204-arm
    strategy:
      fail-fast: false
      matrix:
        environment: [testlintfuzz, testintegration, testrace, build]
    permissions:
      contents: read
      id-token: write
      attestations: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag || github.ref }}

      - name: Install Python 3.10 and cache dependencies
        uses: buildjet/setup-python@v5
        with:
          python-version: 3.10.x
          cache: pip
          cache-dependency-path: |
            **/requirements.txt

      - name: Install Qt 6.7.0 (Linux ARM64 Fork)
        uses: ArchitektApx/install-qt-action@v4
        with:
          cache: true
          version: 6.7.0
          host: linux_arm64
          arch: linux_gcc_arm64

      - name: Install Go 1.21.9
        uses: buildjet/setup-go@v5
        with:
          go-version: 1.21.9
          cache: true
          cache-dependency-path: |
            **/go.mod
            **/go.sum

      - name: Install build dependencies
        run: |
          sudo apt update && sudo apt-get install -y \
            ninja-build \
            libglvnd-dev \
            libsecret-1-dev \
            pkg-config

      - name: Install linter and devel tools
        if: matrix.environment != 'build'
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2
          echo "PATH=$(go env GOPATH)/bin:$PATH" >> $GITHUB_ENV
          echo "GOMAXPROCS=$(nproc)" >> $GITHUB_ENV
    
      - name: Install mock dependencies
        if: matrix.environment != 'build'
        run: | 
          sudo apt-get install -y \
            golang-github-golang-mock-dev \
            mockgen

          make mocks

      - name: Apply patches
        run: |
          for patch in $(ls patches/*.patch | sort); do
            patch -p1 < $patch
          done

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Set Environment Variables
        run: |
          echo "VCPKG_BINARY_SOURCES=clear;x-gha,readwrite" >> "$GITHUB_ENV"
          echo "VCPKG_FORCE_SYSTEM_BINARIES=1" >> "$GITHUB_ENV"

      - name: Run lint, tests and fuzzing
        if: matrix.environment == 'testlintfuzz'
        run: |
          touch lint.log 
          make lint -j$(nproc) | tee lint.log
          touch tests.log
          make test -j$(nproc) | tee tests.log
          touch fuzz.log
          make fuzz -j$(nproc) | tee fuzz.log

      - name: Run race tests
        if: matrix.environment == 'testrace'
        run: |
          touch test-race.log
          make test-race -j$(nproc) | tee test-race.log
          touch test-integration-race.log
          make test-integration-race -j$(nproc) | tee test-integration-race.log

      - name: Run integration tests
        if: matrix.environment == 'testintegration'
        run: |
          touch test-integration.log
          make test-integration -j$(nproc) | tee test-integration.log

          touch test-integration-nightly.log
          make test-integration-nightly -j$(nproc) | tee test-integration-nightly.log

      - name: Run Build
        if: matrix.environment == 'build'
        run: make build
  
      - name: collect test logs and coverage data
        if: matrix.environment != 'build'
        run: |
          gzip -9 *.log
          if [ -d coverage ]; then
            tar -czf coverage-${{ matrix.environment }}.tgz coverage
          fi

      - name: attest artifacts
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: '*gz'

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: '*gz'
          